{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Documents\\\\github\\\\ApoArm_Web\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport NavigationBar from './components/NavigationBar';\nimport ChatPanel from './components/ChatPanel';\nimport VideoStream from './components/VideoStream';\nimport RobotArm3D from './components/RobotArm3D';\nimport ControlPanel from './components/ControlPanel';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: '您好！我是机械臂控制助手，请告诉我您需要什么操作。'\n  }]);\n  const [serialPorts, setSerialPorts] = useState([]);\n  const [selectedPort, setSelectedPort] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [serialData, setSerialData] = useState('');\n  const [angles, setAngles] = useState({\n    yaw: 180,\n    arm1: 90,\n    arm2: 90\n  });\n  useEffect(() => {\n    // 获取可用串口\n    socket.emit('getSerialPorts');\n    socket.on('serialPorts', ports => {\n      setSerialPorts(ports);\n      if (ports.length > 0) {\n        setSelectedPort(ports[0].path);\n      }\n    });\n    socket.on('serialData', data => {\n      setSerialData(data);\n      // 解析角度数据\n      const match = data.match(/Yaw: (\\d+) \\| Arm1: (\\d+) \\| Arm2: (\\d+)/);\n      if (match) {\n        setAngles({\n          yaw: parseInt(match[1]),\n          arm1: parseInt(match[2]),\n          arm2: parseInt(match[3])\n        });\n      }\n    });\n    return () => {\n      socket.off('serialPorts');\n      socket.off('serialData');\n    };\n  }, []);\n  const handleConnect = () => {\n    if (selectedPort) {\n      socket.emit('initSerial', selectedPort);\n      setIsConnected(true);\n    }\n  };\n  const handleDisconnect = () => {\n    // 这里可以添加断开连接的逻辑\n    setIsConnected(false);\n  };\n  const handleSendMessage = message => {\n    // 添加用户消息\n    const newMessages = [...messages, {\n      sender: 'user',\n      text: message\n    }];\n    setMessages(newMessages);\n\n    // 模拟机器人回复 (实际应用中这里会调用LLM)\n    setTimeout(() => {\n      let response = '';\n      if (message.includes('你好') || message.includes('hello')) {\n        response = '您好！我是机械臂控制助手，可以通过自然语言控制机械臂。';\n      } else if (message.includes('旋转')) {\n        const match = message.match(/(\\d+)度/);\n        if (match) {\n          const angle = Math.min(360, Math.max(0, parseInt(match[1])));\n          handleSendCommand(`id 0 ${angle}`);\n          response = `已将旋转轴设置为${angle}度`;\n        } else {\n          response = '请指定角度，例如\"旋转到90度\"';\n        }\n      } else if (message.includes('大臂')) {\n        const match = message.match(/(\\d+)度/);\n        if (match) {\n          const angle = Math.min(180, Math.max(0, parseInt(match[1])));\n          handleSendCommand(`id 1 ${angle}`);\n          response = `已将大臂设置为${angle}度`;\n        } else {\n          response = '请指定角度，例如\"大臂到45度\"';\n        }\n      } else if (message.includes('小臂')) {\n        const match = message.match(/(\\d+)度/);\n        if (match) {\n          const angle = Math.min(180, Math.max(0, parseInt(match[1])));\n          handleSendCommand(`id 2 ${angle}`);\n          response = `已将小臂设置为${angle}度`;\n        } else {\n          response = '请指定角度，例如\"小臂到120度\"';\n        }\n      } else if (message.includes('初始') || message.includes('重置')) {\n        handleSendCommand('id 0 180');\n        handleSendCommand('id 1 90');\n        handleSendCommand('id 2 90');\n        response = '已将机械臂重置到初始位置';\n      } else {\n        response = '抱歉，我不太明白您的意思。您可以尝试说\"旋转到90度\"、\"大臂到45度\"或\"重置到初始位置\"等指令。';\n      }\n      setMessages([...newMessages, {\n        sender: 'bot',\n        text: response\n      }]);\n    }, 500);\n  };\n  const handleSendCommand = command => {\n    socket.emit('sendCommand', command);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serial-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedPort,\n        onChange: e => setSelectedPort(e.target.value),\n        disabled: isConnected,\n        children: serialPorts.map((port, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: port.path,\n          children: [port.path, \" (\", port.manufacturer || 'Unknown', \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"\\u8FDE\\u63A5\\u4E32\\u53E3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disconnect\",\n        onClick: handleDisconnect,\n        children: \"\\u65AD\\u5F00\\u8FDE\\u63A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u72B6\\u6001: \", isConnected ? '已连接' : '未连接']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChatPanel, {\n        messages: messages,\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-section\",\n        children: [/*#__PURE__*/_jsxDEV(VideoStream, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RobotArm3D, {\n          angles: angles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n          onSendCommand: handleSendCommand,\n          serialData: serialData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uHfrrANZXVkIiVQBxadAfZiDhy8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","NavigationBar","ChatPanel","VideoStream","RobotArm3D","ControlPanel","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","sender","text","serialPorts","setSerialPorts","selectedPort","setSelectedPort","isConnected","setIsConnected","serialData","setSerialData","angles","setAngles","yaw","arm1","arm2","emit","on","ports","length","path","data","match","parseInt","off","handleConnect","handleDisconnect","handleSendMessage","message","newMessages","setTimeout","response","includes","angle","Math","min","max","handleSendCommand","command","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","map","port","index","manufacturer","onClick","onSendMessage","onSendCommand","_c","$RefreshReg$"],"sources":["C:/Users/Aaron/Documents/github/ApoArm_Web/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport ChatPanel from './components/ChatPanel';\r\nimport VideoStream from './components/VideoStream';\r\nimport RobotArm3D from './components/RobotArm3D';\r\nimport ControlPanel from './components/ControlPanel';\r\nimport './styles/App.css';\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: '您好！我是机械臂控制助手，请告诉我您需要什么操作。' }\r\n  ]);\r\n  const [serialPorts, setSerialPorts] = useState([]);\r\n  const [selectedPort, setSelectedPort] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [serialData, setSerialData] = useState('');\r\n  const [angles, setAngles] = useState({\r\n    yaw: 180,\r\n    arm1: 90,\r\n    arm2: 90\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 获取可用串口\r\n    socket.emit('getSerialPorts');\r\n    \r\n    socket.on('serialPorts', (ports) => {\r\n      setSerialPorts(ports);\r\n      if (ports.length > 0) {\r\n        setSelectedPort(ports[0].path);\r\n      }\r\n    });\r\n    \r\n    socket.on('serialData', (data) => {\r\n      setSerialData(data);\r\n      // 解析角度数据\r\n      const match = data.match(/Yaw: (\\d+) \\| Arm1: (\\d+) \\| Arm2: (\\d+)/);\r\n      if (match) {\r\n        setAngles({\r\n          yaw: parseInt(match[1]),\r\n          arm1: parseInt(match[2]),\r\n          arm2: parseInt(match[3])\r\n        });\r\n      }\r\n    });\r\n    \r\n    return () => {\r\n      socket.off('serialPorts');\r\n      socket.off('serialData');\r\n    };\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    if (selectedPort) {\r\n      socket.emit('initSerial', selectedPort);\r\n      setIsConnected(true);\r\n    }\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    // 这里可以添加断开连接的逻辑\r\n    setIsConnected(false);\r\n  };\r\n\r\n  const handleSendMessage = (message) => {\r\n    // 添加用户消息\r\n    const newMessages = [...messages, { sender: 'user', text: message }];\r\n    setMessages(newMessages);\r\n    \r\n    // 模拟机器人回复 (实际应用中这里会调用LLM)\r\n    setTimeout(() => {\r\n      let response = '';\r\n      \r\n      if (message.includes('你好') || message.includes('hello')) {\r\n        response = '您好！我是机械臂控制助手，可以通过自然语言控制机械臂。';\r\n      } else if (message.includes('旋转')) {\r\n        const match = message.match(/(\\d+)度/);\r\n        if (match) {\r\n          const angle = Math.min(360, Math.max(0, parseInt(match[1])));\r\n          handleSendCommand(`id 0 ${angle}`);\r\n          response = `已将旋转轴设置为${angle}度`;\r\n        } else {\r\n          response = '请指定角度，例如\"旋转到90度\"';\r\n        }\r\n      } else if (message.includes('大臂')) {\r\n        const match = message.match(/(\\d+)度/);\r\n        if (match) {\r\n          const angle = Math.min(180, Math.max(0, parseInt(match[1])));\r\n          handleSendCommand(`id 1 ${angle}`);\r\n          response = `已将大臂设置为${angle}度`;\r\n        } else {\r\n          response = '请指定角度，例如\"大臂到45度\"';\r\n        }\r\n      } else if (message.includes('小臂')) {\r\n        const match = message.match(/(\\d+)度/);\r\n        if (match) {\r\n          const angle = Math.min(180, Math.max(0, parseInt(match[1])));\r\n          handleSendCommand(`id 2 ${angle}`);\r\n          response = `已将小臂设置为${angle}度`;\r\n        } else {\r\n          response = '请指定角度，例如\"小臂到120度\"';\r\n        }\r\n      } else if (message.includes('初始') || message.includes('重置')) {\r\n        handleSendCommand('id 0 180');\r\n        handleSendCommand('id 1 90');\r\n        handleSendCommand('id 2 90');\r\n        response = '已将机械臂重置到初始位置';\r\n      } else {\r\n        response = '抱歉，我不太明白您的意思。您可以尝试说\"旋转到90度\"、\"大臂到45度\"或\"重置到初始位置\"等指令。';\r\n      }\r\n      \r\n      setMessages([...newMessages, { sender: 'bot', text: response }]);\r\n    }, 500);\r\n  };\r\n\r\n  const handleSendCommand = (command) => {\r\n    socket.emit('sendCommand', command);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavigationBar />\r\n      \r\n      <div className=\"serial-panel\">\r\n        <select \r\n          value={selectedPort} \r\n          onChange={(e) => setSelectedPort(e.target.value)}\r\n          disabled={isConnected}\r\n        >\r\n          {serialPorts.map((port, index) => (\r\n            <option key={index} value={port.path}>\r\n              {port.path} ({port.manufacturer || 'Unknown'})\r\n            </option>\r\n          ))}\r\n        </select>\r\n        \r\n        {!isConnected ? (\r\n          <button onClick={handleConnect}>连接串口</button>\r\n        ) : (\r\n          <button className=\"disconnect\" onClick={handleDisconnect}>断开连接</button>\r\n        )}\r\n        \r\n        <span>状态: {isConnected ? '已连接' : '未连接'}</span>\r\n      </div>\r\n      \r\n      <div className=\"main-content\">\r\n        <ChatPanel messages={messages} onSendMessage={handleSendMessage} />\r\n        \r\n        <div className=\"control-section\">\r\n          <VideoStream />\r\n          <RobotArm3D angles={angles} />\r\n          <ControlPanel \r\n            onSendCommand={handleSendCommand} \r\n            serialData={serialData}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}